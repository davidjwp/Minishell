for now i'm just trying to create the AbstractSyntaxTree

the only files that matter are in the parser folder
these files are :
-	create_ast2.c
-	lexerutilsA.c
-	lexerutilsB.c
-	lexerutilsC.c

the reason why i have so many other files is because i do tests or check things
and usually keep old code even if i'm pretty sure it's depreciated 


list of the special characters that are explicitily asked in the subject
anything not asked is not required.

(') single quotes which do no interpretation
(") double quotes which only interpret $ for variables
($) dollar sign for variables including env
(>) output redirection
(<) input redirection
(<<) heredoc with delimiter and read until a line containing the delimiter
	is seen, does not have to update history

(>>) output redirection but appends the text instead of writing over
(|) pipes
($?) this expands to the exit status of the last executed foreground
pipeline meaning what's left in the pipe if it has anything in it



('),(")			QUOTES
($)				SPECIAL
(>),(<)			OPERATOR
(>>)			APREDIR
(<<)			HEREDOC
(|)				PIPE
($?)			EXSTAT
( ),(\t),(\n)	SEPARATOR

1. **Missing Command or Argument:**
   - `syntax error near unexpected token 'newline'`: Occurs when you enter a command without specifying the actual command or arguments.

2. **Misplaced Redirection Operators:**
   - `syntax error near unexpected token '>'`: Occurs when you use a redirection operator (e.g., `>`) without specifying a command or file to redirect to.

3. **Misplaced Pipe Operator:**
   - `syntax error near unexpected token '|'`: Occurs when you use the pipe operator (`|`) without specifying a command before or after it.

4. **Unclosed Quotes:**
   - `syntax error near unexpected token 'newline'` or similar messages may occur when you have unclosed single ('') or double ("") quotes.

5. **Missing Semi-Colon:**
   - `syntax error near unexpected token 'newline'` or similar messages may occur when you don't use a semi-colon (`;`) or newline to separate multiple commands on a single line.

6. **Unbalanced Parentheses or Brackets:**
   - `syntax error near unexpected token ']'` or similar messages may occur when you have unbalanced parentheses, square brackets, or curly braces.

7. **Unclosed Subshell or Command Substitution:**
   - `syntax error near unexpected token ')'` or similar messages may occur when you have an unclosed subshell or command substitution.

8. **Use of Reserved Words or Special Characters:**
   - Bash has several reserved words (e.g., `if`, `while`, `for`) and special characters (e.g., `$`, `;`) that must be used appropriately in the syntax of your commands. Using them incorrectly can result in parse errors.

9. **Use of Invalid Variable Names:**
   - `syntax error: operand expected (error token is "<invalid>")`: Occurs when you use an invalid variable name, such as starting with a number or containing special characters other than underscores.

10. **Misplaced Function Definitions:**
    - `syntax error near unexpected token '('`: Occurs when you attempt to define a function in an incorrect manner.
