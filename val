Script started on 2023-11-25 14:25:27+01:00 [TERM="xterm-256color" TTY="/dev/pts/6" COLUMNS="104" LINES="33"]
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind .,/[K[K/minitest
[?2004l==38852== Memcheck, a memory error detector
==38852== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==38852== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==38852== Command: ./minitest
==38852== 
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004l==38852== Invalid read of size 8
==38852==    at 0x10BCEC: free_env (exeutils_B.c:75)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14160 is 16 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD02: free_env (exeutils_B.c:79)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b142c0 is 16 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD0E: free_env (exeutils_B.c:80)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b142b0 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD18: free_env (exeutils_B.c:80)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14210 is 0 bytes inside a block of size 5 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD18: free_env (exeutils_B.c:80)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BE53: split_env (cr_env.c:37)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD1D: free_env (exeutils_B.c:81)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b142b8 is 8 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD28: free_env (exeutils_B.c:81)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14260 is 0 bytes inside a block of size 9 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD28: free_env (exeutils_B.c:81)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BEA5: split_env (cr_env.c:39)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD2D: free_env (exeutils_B.c:82)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b142c8 is 24 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD38: free_env (exeutils_B.c:82)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b141b0 is 0 bytes inside a block of size 24 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD38: free_env (exeutils_B.c:82)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BE0C: split_env (cr_env.c:34)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b142b0 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD53: free_env (exeutils_B.c:85)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14150 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD5D: free_env (exeutils_B.c:85)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b140a0 is 0 bytes inside a block of size 9 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD5D: free_env (exeutils_B.c:85)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BE53: split_env (cr_env.c:37)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD62: free_env (exeutils_B.c:86)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14158 is 8 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD6D: free_env (exeutils_B.c:86)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b140f0 is 0 bytes inside a block of size 23 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD6D: free_env (exeutils_B.c:86)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BEA5: split_env (cr_env.c:39)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD72: free_env (exeutils_B.c:87)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14168 is 24 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD7D: free_env (exeutils_B.c:87)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14040 is 0 bytes inside a block of size 24 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD7D: free_env (exeutils_B.c:87)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BE0C: split_env (cr_env.c:34)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Address 0x4b14150 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
exit:0
[?2004h$> exit
[?2004l==38852== Invalid read of size 8
==38852==    at 0x10BCEC: free_env (exeutils_B.c:75)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14160 is 16 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD02: free_env (exeutils_B.c:79)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b142c0 is 16 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD0E: free_env (exeutils_B.c:80)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b142b0 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD18: free_env (exeutils_B.c:80)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14210 is 0 bytes inside a block of size 5 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD18: free_env (exeutils_B.c:80)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BE53: split_env (cr_env.c:37)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD1D: free_env (exeutils_B.c:81)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b142b8 is 8 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD28: free_env (exeutils_B.c:81)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14260 is 0 bytes inside a block of size 9 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD28: free_env (exeutils_B.c:81)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BEA5: split_env (cr_env.c:39)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD2D: free_env (exeutils_B.c:82)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b142c8 is 24 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD38: free_env (exeutils_B.c:82)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b141b0 is 0 bytes inside a block of size 24 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD38: free_env (exeutils_B.c:82)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BE0C: split_env (cr_env.c:34)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b142b0 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD44: free_env (exeutils_B.c:83)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFE4: cr_env (cr_env.c:78)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD53: free_env (exeutils_B.c:85)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14150 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD5D: free_env (exeutils_B.c:85)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b140a0 is 0 bytes inside a block of size 9 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD5D: free_env (exeutils_B.c:85)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BE53: split_env (cr_env.c:37)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD62: free_env (exeutils_B.c:86)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14158 is 8 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD6D: free_env (exeutils_B.c:86)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b140f0 is 0 bytes inside a block of size 23 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD6D: free_env (exeutils_B.c:86)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10D398: ft_calloc (utils_A.c:84)
==38852==    by 0x10BEA5: split_env (cr_env.c:39)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid read of size 8
==38852==    at 0x10BD72: free_env (exeutils_B.c:87)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14168 is 24 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD7D: free_env (exeutils_B.c:87)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14040 is 0 bytes inside a block of size 24 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD7D: free_env (exeutils_B.c:87)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BE0C: split_env (cr_env.c:34)
==38852==    by 0x10BF1D: env_node (cr_env.c:51)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== Invalid free() / delete / delete[] / realloc()
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C251: main (minishell.c:73)
==38852==  Address 0x4b14150 is 0 bytes inside a block of size 32 free'd
==38852==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BD89: free_env (exeutils_B.c:88)
==38852==    by 0x10B3F2: clean_up (exe.c:126)
==38852==    by 0x10C16E: sh_init (minishell.c:48)
==38852==    by 0x10C22C: main (minishell.c:70)
==38852==  Block was alloc'd at
==38852==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==38852==    by 0x10BF2B: env_node (cr_env.c:52)
==38852==    by 0x10BFB7: cr_env (cr_env.c:74)
==38852==    by 0x10C1F0: main (minishell.c:65)
==38852== 
==38852== 
==38852== HEAP SUMMARY:
==38852==     in use at exit: 204,149 bytes in 221 blocks
==38852==   total heap usage: 582 allocs, 609 frees, 236,227 bytes allocated
==38852== 
==38852== LEAK SUMMARY:
==38852==    definitely lost: 0 bytes in 0 blocks
==38852==    indirectly lost: 0 bytes in 0 blocks
==38852==      possibly lost: 0 bytes in 0 blocks
==38852==    still reachable: 204,149 bytes in 221 blocks
==38852==         suppressed: 0 bytes in 0 blocks
==38852== Rerun with --leak-check=full to see details of leaked memory
==38852== 
==38852== For lists of detected and suppressed errors, rerun with: -s
==38852== ERROR SUMMARY: 496 errors from 32 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
gcc -c -g3 -Wall -Wextra -Werror srcs/signals/ctrl_signal.c -o objs/signals/ctrl_signal.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/msgs.c -o objs/parser/msgs.o
gcc -c -g3 -Wall -Wextra -Werror srcs/fds.c -o objs/fds.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser_A.c -o objs/parser/parser_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_A.c -o objs/utils/utils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_B.c -o objs/utils/utils_B.o
gcc -g3 -Wall -Wextra -Werror includes/SH_functs.h includes/SH_structs.h objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o -L/usr/include -lreadline -o minitest
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind ./minitest
[?2004l==39672== Memcheck, a memory error detector
==39672== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==39672== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==39672== Command: ./minitest
==39672== 
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> exit
[?2004l==39672== 
==39672== HEAP SUMMARY:
==39672==     in use at exit: 204,149 bytes in 221 blocks
==39672==   total heap usage: 694 allocs, 473 frees, 237,697 bytes allocated
==39672== 
==39672== LEAK SUMMARY:
==39672==    definitely lost: 0 bytes in 0 blocks
==39672==    indirectly lost: 0 bytes in 0 blocks
==39672==      possibly lost: 0 bytes in 0 blocks
==39672==    still reachable: 204,149 bytes in 221 blocks
==39672==         suppressed: 0 bytes in 0 blocks
==39672== Rerun with --leak-check=full to see details of leaked memory
==39672== 
==39672== For lists of detected and suppressed errors, rerun with: -s
==39672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ ./m[K[K[Kvalgrind ./minitest
[?2004l==39715== Memcheck, a memory error detector
==39715== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==39715== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==39715== Command: ./minitest
==39715== 
[?2004h$>                                                                                                           
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$>                                                                                                                               
[?2004lexit:0
[?2004h$>            
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$>            
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$>            
[?2004lexit:0
[?2004h$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> 
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V               
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V               
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V                       
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V                       
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V                       
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V                       ^V      
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V^V^V^V^V^V^V^V^V^V^V                       ^V              
[?2004l: command not found
==39866== 
==39866== HEAP SUMMARY:
==39866==     in use at exit: 208,165 bytes in 222 blocks
==39866==   total heap usage: 2,022 allocs, 1,800 frees, 1,078,900 bytes allocated
==39866== 
==39866== LEAK SUMMARY:
==39866==    definitely lost: 0 bytes in 0 blocks
==39866==    indirectly lost: 0 bytes in 0 blocks
==39866==      possibly lost: 0 bytes in 0 blocks
==39866==    still reachable: 208,165 bytes in 222 blocks
==39866==         suppressed: 0 bytes in 0 blocks
==39866== Rerun with --leak-check=full to see details of leaked memory
==39866== 
==39866== For lists of detected and suppressed errors, rerun with: -s
==39866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> exit
[?2004l==39715== 
==39715== HEAP SUMMARY:
==39715==     in use at exit: 208,165 bytes in 222 blocks
==39715==   total heap usage: 1,971 allocs, 1,749 frees, 1,076,472 bytes allocated
==39715== 
==39715== LEAK SUMMARY:
==39715==    definitely lost: 0 bytes in 0 blocks
==39715==    indirectly lost: 0 bytes in 0 blocks
==39715==      possibly lost: 0 bytes in 0 blocks
==39715==    still reachable: 208,165 bytes in 222 blocks
==39715==         suppressed: 0 bytes in 0 blocks
==39715== Rerun with --leak-check=full to see details of leaked memory
==39715== 
==39715== For lists of detected and suppressed errors, rerun with: -s
==39715== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ b [K[Kgdb  ./minintest
[?2004l[35;1mGNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1[m
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
./minintest: No such file or directory.
[?2004h(gdb) quit
[?2004l[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ gdb ./miniute[K[K[Ktestt
[?2004l[35;1mGNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1[m
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
./minitestt: No such file or directory.
[?2004h(gdb) quit
[?2004l[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ gdb ./minitest
[?2004l[35;1mGNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1[m
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./minitest[m...
[?2004h(gdb) b ap[K[K[K parser 
[?2004lBreakpoint 1 at [34m0x46f5[m: file [32msrcs/parser/parser.c[m, line 80.
[?2004h(gdb) n [K[Kb [K[Kb createw[K[K[K[K[K[K[K[K[Kr 
[?2004lStarting program: [32m/home/davidjwp/Minishell/minitest[m 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".
[?2004h$> ^V           
.git/       Makefile    das         includes/   objs/       srcs/       val         
.vscode/    README      debug       minitest    rmMakefile  test_files/ 
$> ^V                                   ^V^V^V^V        
[?2004l
Breakpoint 1, [33mparser[m ([36minput[m=0x555555577c20 "\026\t\t\t\t\t\026\026\026\026\t", [36mcl[m=0x55555555fd00) at [32msrcs/parser/parser.c[m:80
80	[31m{[m
[?2004h[?2004l[?2004h(gdb) n
[?2004l85		error [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l86		g_ind [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l87		tree [31m=[m [01mcreate_ast[m[31m([minput[31m,[m [31m&[mg_ind[31m,[m [31m&[merror[31m,[m NULL[31m);[m
[?2004h[?2004l[?2004h(gdb) b cv[Kreate_ast
[?2004lBreakpoint 2 at [34m0x555555556a17[m: file [32msrcs/lexer/create_ast.c[m, line 109.
[?2004h(gdb) n
[?2004l
Breakpoint 2, [33mcreate_ast[m ([36minput[m=0x555555577c20 "\026\t\t\t\t\t\026\026\026\026\t", [36mg_ind[m=0x7fffffffdf28, [36merror[m=0x7fffffffdf24, [36mpar[m=0x0) at [32msrcs/lexer/create_ast.c[m:109
109		node [31m=[m [01mmalloc[m[31m([m[01;34msizeof[m[31m([mt_astn[31m));[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l110		[01;34mif[m [31m([mnode [31m==[m NULL[31m)[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l112		[01;34mif[m [31m([m[01m_pipe[m[31m([minput[31m))[m
[?2004h[?2004l[?2004h(gdb) b[Kn
[?2004l117		[01;34melse[m [01;34mif[m [31m([m[01m_red[m[31m([minput[31m))[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l123			node [31m=[m [01mast_cmd[m[31m([minput[31m,[m g_ind[31m,[m [31m([mt_cms[31m)[m[31m{[mpar[31m,[m node[31m}[m[31m,[m error[31m);[m
[?2004h[?2004l[?2004h(gdb) b ast_cmod[K[Kd
[?2004lBreakpoint 3 at [34m0x555555556657[m: file [32msrcs/lexer/create_ast.c[m, line 36.
[?2004h(gdb) n
[?2004l
Breakpoint 3, [33mast_cmd[m ([36minput[m=0x555555577c20 "\026\t\t\t\t\t\026\026\026\026\t", [36mg_ind[m=0x7fffffffdf28, [36mc[m=..., [36merr[m=0x7fffffffdf24) at [32msrcs/lexer/create_ast.c[m:36
36	[31m{[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l41		i [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l42		l_ind [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l43		nbr [31m=[m [01mnbr_token[m[31m([minput[31m);[m
[?2004h[?2004l[?2004h(gdb) b nbr_token
[?2004lBreakpoint 4 at [34m0x555555555ee7[m: file [32msrcs/lexer/lexerutils_C.c[m, line 22.
[?2004h(gdb) n
[?2004l
Breakpoint 4, [33mnbr_token[m ([36minput[m=0x555555577c20 "\026\t\t\t\t\t\026\026\026\026\t") at [32msrcs/lexer/lexerutils_C.c[m:22
22	[31m{[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l27		l_ind [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l28		tokcnt [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l29		[01;34mif[m [31m(!*[minput[31m)[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l31		t [31m=[m [01mtype[m[31m([minput[31m,[m l_ind[31m);[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l32		[01;34mwhile[m [31m([mt [31m!=[m REDL [31m&&[m t [31m!=[m REDR [31m&&[m t [31m!=[m APRD [31m&&[m t [31m!=[m PIPE [31m&&[m input[31m[[ml_ind[31m])[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l34			[01mit_token[m[31m([minput[31m,[m [31m&[ml_ind[31m,[m IT_SEP[31m);[m
[?2004h[?2004l[?2004h(gdb) b it__[Ktoken
[?2004lBreakpoint 5 at [34m0x555555555c12[m: file [32msrcs/lexer/lexerutils_B.c[m, line 90.
[?2004h(gdb) n
[?2004l
Breakpoint 5, [33mit_token[m ([36minput[m=0x555555577c20 "\026\t\t\t\t\t\026\026\026\026\t", [36ml_ind[m=0x7fffffffde30, [36mflag[m=0) at [32msrcs/lexer/lexerutils_B.c[m:90
90		[01;34mif[m [31m([mflag [31m==[m IT_SEP[31m)[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l91			[01;34mwhile[m [31m([m[01mtype[m[31m([minput[31m,[m [31m*[ml_ind[31m)[m [31m==[m SEPR [31m&&[m input[31m[*[ml_ind[31m])[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l93		[01;34mif[m [31m(![minput[31m[*[ml_ind[31m])[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l95		[01;34melse[m [01;34mif[m [31m([mflag [31m==[m IT_TOK[31m)[m
[?2004h[?2004l[?2004h(gdb) p type()i)n)p)u)t),) )*)l)_)i)n)d)
[?2004l$1 = 0
[?2004h(gdb) quit
[?2004l[?2004hA debugging session is active.

	Inferior 1 [process 40381] will be killed.

Quit anyway? (y or n) y
[?2004l[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
gcc -c -g3 -Wall -Wextra -Werror srcs/signals/ctrl_signal.c -o objs/signals/ctrl_signal.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/msgs.c -o objs/parser/msgs.o
gcc -c -g3 -Wall -Wextra -Werror srcs/fds.c -o objs/fds.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser_A.c -o objs/parser/parser_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_A.c -o objs/utils/utils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_B.c -o objs/utils/utils_B.o
gcc -g3 -Wall -Wextra -Werror includes/SH_functs.h includes/SH_structs.h objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o -L/usr/include -lreadline -o minitest
.[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ ./[K[Kvalgrind /[K./minitest
[?2004l==41884== Memcheck, a memory error detector
==41884== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==41884== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==41884== Command: ./minitest
==41884== 
[?2004h$> dadasdasd
[?2004ldadasdasd: command not found
==41891== 
==41891== HEAP SUMMARY:
==41891==     in use at exit: 208,165 bytes in 222 blocks
==41891==   total heap usage: 633 allocs, 411 frees, 242,673 bytes allocated
==41891== 
==41891== LEAK SUMMARY:
==41891==    definitely lost: 0 bytes in 0 blocks
==41891==    indirectly lost: 0 bytes in 0 blocks
==41891==      possibly lost: 0 bytes in 0 blocks
==41891==    still reachable: 208,165 bytes in 222 blocks
==41891==         suppressed: 0 bytes in 0 blocks
==41891== Rerun with --leak-check=full to see details of leaked memory
==41891== 
==41891== For lists of detected and suppressed errors, rerun with: -s
==41891== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> bfd
[?2004lbfd: command not found
==41904== 
==41904== HEAP SUMMARY:
==41904==     in use at exit: 208,165 bytes in 222 blocks
==41904==   total heap usage: 648 allocs, 426 frees, 242,743 bytes allocated
==41904== 
==41904== LEAK SUMMARY:
==41904==    definitely lost: 0 bytes in 0 blocks
==41904==    indirectly lost: 0 bytes in 0 blocks
==41904==      possibly lost: 0 bytes in 0 blocks
==41904==    still reachable: 208,165 bytes in 222 blocks
==41904==         suppressed: 0 bytes in 0 blocks
==41904== Rerun with --leak-check=full to see details of leaked memory
==41904== 
==41904== For lists of detected and suppressed errors, rerun with: -s
==41904== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$>                                  
[?2004lexit:256
[?2004h$>                                                                                       
[?2004lexit:256
[?2004h$> bfd[K                                     
[?2004lexit:256
[?2004h$>              ^V                              ^V
[?2004lexit:256
[?2004h$> exit
[?2004l==41884== 
==41884== HEAP SUMMARY:
==41884==     in use at exit: 208,165 bytes in 222 blocks
==41884==   total heap usage: 782 allocs, 560 frees, 407,914 bytes allocated
==41884== 
==41884== LEAK SUMMARY:
==41884==    definitely lost: 0 bytes in 0 blocks
==41884==    indirectly lost: 0 bytes in 0 blocks
==41884==      possibly lost: 0 bytes in 0 blocks
==41884==    still reachable: 208,165 bytes in 222 blocks
==41884==         suppressed: 0 bytes in 0 blocks
==41884== Rerun with --leak-check=full to see details of leaked memory
==41884== 
==41884== For lists of detected and suppressed errors, rerun with: -s
==41884== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind ./minitest
[?2004l==42061== Memcheck, a memory error detector
==42061== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==42061== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==42061== Command: ./minitest
==42061== 
[?2004h$> :
[?2004l:: command not found
==42098== 
==42098== HEAP SUMMARY:
==42098==     in use at exit: 208,165 bytes in 222 blocks
==42098==   total heap usage: 633 allocs, 411 frees, 242,401 bytes allocated
==42098== 
==42098== LEAK SUMMARY:
==42098==    definitely lost: 0 bytes in 0 blocks
==42098==    indirectly lost: 0 bytes in 0 blocks
==42098==      possibly lost: 0 bytes in 0 blocks
==42098==    still reachable: 208,165 bytes in 222 blocks
==42098==         suppressed: 0 bytes in 0 blocks
==42098== Rerun with --leak-check=full to see details of leaked memory
==42098== 
==42098== For lists of detected and suppressed errors, rerun with: -s
==42098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> :[K[K$> [K$> exit
[?2004l==42061== 
==42061== HEAP SUMMARY:
==42061==     in use at exit: 208,165 bytes in 222 blocks
==42061==   total heap usage: 589 allocs, 367 frees, 240,415 bytes allocated
==42061== 
==42061== LEAK SUMMARY:
==42061==    definitely lost: 0 bytes in 0 blocks
==42061==    indirectly lost: 0 bytes in 0 blocks
==42061==      possibly lost: 0 bytes in 0 blocks
==42061==    still reachable: 208,165 bytes in 222 blocks
==42061==         suppressed: 0 bytes in 0 blocks
==42061== Rerun with --leak-check=full to see details of leaked memory
==42061== 
==42061== For lists of detected and suppressed errors, rerun with: -s
==42061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind ./,m[K[Kmm[Kinitest
[?2004l==83285== Memcheck, a memory error detector
==83285== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==83285== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==83285== Command: ./minitest
==83285== 
[?2004h$> ;[K;
[?2004l;: command not found
==83298== 
==83298== HEAP SUMMARY:
==83298==     in use at exit: 208,165 bytes in 222 blocks
==83298==   total heap usage: 636 allocs, 414 frees, 242,467 bytes allocated
==83298== 
==83298== LEAK SUMMARY:
==83298==    definitely lost: 0 bytes in 0 blocks
==83298==    indirectly lost: 0 bytes in 0 blocks
==83298==      possibly lost: 0 bytes in 0 blocks
==83298==    still reachable: 208,165 bytes in 222 blocks
==83298==         suppressed: 0 bytes in 0 blocks
==83298== Rerun with --leak-check=full to see details of leaked memory
==83298== 
==83298== For lists of detected and suppressed errors, rerun with: -s
==83298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> 
[?2004lexit:0
[?2004h$> exit
[?2004l==83285== 
==83285== HEAP SUMMARY:
==83285==     in use at exit: 208,165 bytes in 222 blocks
==83285==   total heap usage: 593 allocs, 371 frees, 240,454 bytes allocated
==83285== 
==83285== LEAK SUMMARY:
==83285==    definitely lost: 0 bytes in 0 blocks
==83285==    indirectly lost: 0 bytes in 0 blocks
==83285==      possibly lost: 0 bytes in 0 blocks
==83285==    still reachable: 208,165 bytes in 222 blocks
==83285==         suppressed: 0 bytes in 0 blocks
==83285== Rerun with --leak-check=full to see details of leaked memory
==83285== 
==83285== For lists of detected and suppressed errors, rerun with: -s
==83285== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ gdb ./minitest
[?2004l[35;1mGNU gdb (Ubuntu 12.1-0ubuntu1~22.04) 12.1[m
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from [32m./minitest[m...
[?2004h(gdb) b sh_init 
[?2004lBreakpoint 1 at [34m0x40b9[m: file [32msrcs/minishell.c[m, line 38.
[?2004h(gdb) n[Kr 
[?2004lStarting program: [32m/home/davidjwp/Minishell/minitest[m 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "[32m/lib/x86_64-linux-gnu/libthread_db.so.1[m".
[?2004h$> 
[?2004l
Breakpoint 1, [33msh_init[m ([36minput[m=0x555555577df0 "", [36msh_env[m=0x55555555e300, [36mcl[m=0x55555555fd00) at [32msrcs/minishell.c[m:38
38		[01msignal[m[31m([mSIGQUIT[31m,[m SIG_IGN[31m);[m
[?2004h[?2004l[?2004h(gdb) n
[?2004l39		[01msignal[m[31m([mSIGINT[31m,[m [31m&[mctrl_c[31m);[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l40		cl[31m->[mfds [31m=[m [01minit_fds[m[31m();[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l41		cl[31m->[menv [31m=[m sh_env[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l42		cl[31m->[minput [31m=[m input[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l43		[01;34mif[m [31m(![mpasses[31m)[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l44			cl[31m->[mstatus [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l45		cl[31m->[mtree [31m=[m [01mparser[m[31m([minput[31m,[m cl[31m);[m
[?2004h[?2004l[?2004h(gdb) b parser
[?2004lBreakpoint 2 at [34m0x5555555586e3[m: file [32msrcs/parser/parser.c[m, line 80.
[?2004h(gdb) n
[?2004l
Breakpoint 2, [33mparser[m ([36minput[m=0x555555577df0 "", [36mcl[m=0x55555555fd00) at [32msrcs/parser/parser.c[m:80
80	[31m{[m
[?2004h[?2004l[?2004h(gdb) p [K[Kn
[?2004l85		error [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l86		g_ind [31m=[m [35m0[m[31m;[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l87		[01;34mif[m [31m([m[01mft_strlen[m[31m([minput[31m)[m [31m==[m [35m1[m[31m)[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l90		tree [31m=[m [01mcreate_ast[m[31m([minput[31m,[m [31m&[mg_ind[31m,[m [31m&[merror[31m,[m NULL[31m);[m
[?2004h[?2004l[?2004h(gdb) 
[?2004l91		[01;34mif[m [31m([merror [31m||[m tree [31m==[m NULL[31m)[m
[?2004h[?2004l[?2004h(gdb) p rr[K[Ktee[K[Kree[Ke
[?2004l$1 = (t_astn *[36m[m) [34m0x0[m
[?2004h(gdb) n[Kp input
[?2004l$2 = [34m0x555555577df0[m ""
[?2004h(gdb) p input*input
[?2004l$3 = 0 '\000'
[?2004h(gdb) exit
[?2004l[?2004hA debugging session is active.

	Inferior 1 [process 83388] will be killed.

Quit anyway? (y or n) y
[?2004l[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
gcc -c -g3 -Wall -Wextra -Werror srcs/signals/ctrl_signal.c -o objs/signals/ctrl_signal.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/msgs.c -o objs/parser/msgs.o
gcc -c -g3 -Wall -Wextra -Werror srcs/fds.c -o objs/fds.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser_A.c -o objs/parser/parser_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_A.c -o objs/utils/utils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_B.c -o objs/utils/utils_B.o
gcc -g3 -Wall -Wextra -Werror includes/SH_functs.h includes/SH_structs.h objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o -L/usr/include -lreadline -o minitest
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind ./minitest
[?2004l==83967== Memcheck, a memory error detector
==83967== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==83967== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==83967== Command: ./minitest
==83967== 
[?2004h$> sad
[?2004lsad: command not found
==83974== 
==83974== HEAP SUMMARY:
==83974==     in use at exit: 208,165 bytes in 222 blocks
==83974==   total heap usage: 633 allocs, 411 frees, 242,469 bytes allocated
==83974== 
==83974== LEAK SUMMARY:
==83974==    definitely lost: 0 bytes in 0 blocks
==83974==    indirectly lost: 0 bytes in 0 blocks
==83974==      possibly lost: 0 bytes in 0 blocks
==83974==    still reachable: 208,165 bytes in 222 blocks
==83974==         suppressed: 0 bytes in 0 blocks
==83974== Rerun with --leak-check=full to see details of leaked memory
==83974== 
==83974== For lists of detected and suppressed errors, rerun with: -s
==83974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> 
[?2004lexit:256
[?2004h$> :
[?2004lexit:0
[?2004h$> ::
[?2004l::: command not found
==83999== 
==83999== HEAP SUMMARY:
==83999==     in use at exit: 208,165 bytes in 222 blocks
==83999==   total heap usage: 726 allocs, 504 frees, 243,439 bytes allocated
==83999== 
==83999== LEAK SUMMARY:
==83999==    definitely lost: 0 bytes in 0 blocks
==83999==    indirectly lost: 0 bytes in 0 blocks
==83999==      possibly lost: 0 bytes in 0 blocks
==83999==    still reachable: 208,165 bytes in 222 blocks
==83999==         suppressed: 0 bytes in 0 blocks
==83999== Rerun with --leak-check=full to see details of leaked memory
==83999== 
==83999== For lists of detected and suppressed errors, rerun with: -s
==83999== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> !~[K![K~
[?2004l!~: command not found
==84180== 
==84180== HEAP SUMMARY:
==84180==     in use at exit: 208,165 bytes in 222 blocks
==84180==   total heap usage: 747 allocs, 525 frees, 243,824 bytes allocated
==84180== 
==84180== LEAK SUMMARY:
==84180==    definitely lost: 0 bytes in 0 blocks
==84180==    indirectly lost: 0 bytes in 0 blocks
==84180==      possibly lost: 0 bytes in 0 blocks
==84180==    still reachable: 208,165 bytes in 222 blocks
==84180==         suppressed: 0 bytes in 0 blocks
==84180== Rerun with --leak-check=full to see details of leaked memory
==84180== 
==84180== For lists of detected and suppressed errors, rerun with: -s
==84180== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> !~[K
[?2004lexit:0
[?2004h$> #
[?2004l#: command not found
==84254== 
==84254== HEAP SUMMARY:
==84254==     in use at exit: 208,165 bytes in 222 blocks
==84254==   total heap usage: 777 allocs, 555 frees, 244,198 bytes allocated
==84254== 
==84254== LEAK SUMMARY:
==84254==    definitely lost: 0 bytes in 0 blocks
==84254==    indirectly lost: 0 bytes in 0 blocks
==84254==      possibly lost: 0 bytes in 0 blocks
==84254==    still reachable: 208,165 bytes in 222 blocks
==84254==         suppressed: 0 bytes in 0 blocks
==84254== Rerun with --leak-check=full to see details of leaked memory
==84254== 
==84254== For lists of detected and suppressed errors, rerun with: -s
==84254== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> exit
[?2004l==83967== 
==83967== HEAP SUMMARY:
==83967==     in use at exit: 208,165 bytes in 222 blocks
==83967==   total heap usage: 726 allocs, 504 frees, 242,080 bytes allocated
==83967== 
==83967== LEAK SUMMARY:
==83967==    definitely lost: 0 bytes in 0 blocks
==83967==    indirectly lost: 0 bytes in 0 blocks
==83967==      possibly lost: 0 bytes in 0 blocks
==83967==    still reachable: 208,165 bytes in 222 blocks
==83967==         suppressed: 0 bytes in 0 blocks
==83967== Rerun with --leak-check=full to see details of leaked memory
==83967== 
==83967== For lists of detected and suppressed errors, rerun with: -s
==83967== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
gcc -c -g3 -Wall -Wextra -Werror srcs/signals/ctrl_signal.c -o objs/signals/ctrl_signal.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/msgs.c -o objs/parser/msgs.o
gcc -c -g3 -Wall -Wextra -Werror srcs/fds.c -o objs/fds.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser_A.c -o objs/parser/parser_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_A.c -o objs/utils/utils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_B.c -o objs/utils/utils_B.o
gcc -g3 -Wall -Wextra -Werror includes/SH_functs.h includes/SH_structs.h objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o -L/usr/include -lreadline -o minitest
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgridn .[K[K[K[Knd ./minitest
[?2004l==84800== Memcheck, a memory error detector
==84800== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==84800== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==84800== Command: ./minitest
==84800== 
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> !
[?2004lexit:1
[?2004h$> /
[?2004l==84831== 
==84831== HEAP SUMMARY:
==84831==     in use at exit: 217,157 bytes in 392 blocks
==84831==   total heap usage: 707 allocs, 315 frees, 245,670 bytes allocated
==84831== 
==84831== LEAK SUMMARY:
==84831==    definitely lost: 0 bytes in 0 blocks
==84831==    indirectly lost: 0 bytes in 0 blocks
==84831==      possibly lost: 0 bytes in 0 blocks
==84831==    still reachable: 217,157 bytes in 392 blocks
==84831==         suppressed: 0 bytes in 0 blocks
==84831== Rerun with --leak-check=full to see details of leaked memory
==84831== 
==84831== For lists of detected and suppressed errors, rerun with: -s
==84831== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
exit:256
[?2004h$> exit
[?2004l==84800== 
==84800== HEAP SUMMARY:
==84800==     in use at exit: 208,165 bytes in 222 blocks
==84800==   total heap usage: 653 allocs, 431 frees, 240,966 bytes allocated
==84800== 
==84800== LEAK SUMMARY:
==84800==    definitely lost: 0 bytes in 0 blocks
==84800==    indirectly lost: 0 bytes in 0 blocks
==84800==      possibly lost: 0 bytes in 0 blocks
==84800==    still reachable: 208,165 bytes in 222 blocks
==84800==         suppressed: 0 bytes in 0 blocks
==84800== Rerun with --leak-check=full to see details of leaked memory
==84800== 
==84800== For lists of detected and suppressed errors, rerun with: -s
==84800== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind ./m,[Kinitest
[?2004l==85210== Memcheck, a memory error detector
==85210== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==85210== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==85210== Command: ./minitest
==85210== 
[?2004h$> >
[?2004lminishell: syntax error near unexpected token 'newline'
exit:0
[?2004h$> exit
[?2004l==85210== 
==85210== HEAP SUMMARY:
==85210==     in use at exit: 204,149 bytes in 221 blocks
==85210==   total heap usage: 579 allocs, 358 frees, 236,237 bytes allocated
==85210== 
==85210== LEAK SUMMARY:
==85210==    definitely lost: 0 bytes in 0 blocks
==85210==    indirectly lost: 0 bytes in 0 blocks
==85210==      possibly lost: 0 bytes in 0 blocks
==85210==    still reachable: 204,149 bytes in 221 blocks
==85210==         suppressed: 0 bytes in 0 blocks
==85210== Rerun with --leak-check=full to see details of leaked memory
==85210== 
==85210== For lists of detected and suppressed errors, rerun with: -s
==85210== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
[01m[Ksrcs/parser/parser.c:16:9:[m[K [01;31m[Kerror: [m[Kconflicting types for ‘[01m[Kparser_rules[m[K’; have ‘[01m[K_Bool(t_astn *, int *, t_cleanup *)[m[K’ {aka ‘[01m[K_Bool(struct AbstractSyntaxTreeNode *, int *, struct CleanUp *)[m[K’}
   16 | bool    [01;31m[Kparser_rules[m[K(t_astn *node, int *error, t_cleanup *cl)
      |         [01;31m[K^~~~~~~~~~~~[m[K
In file included from [01m[Ksrcs/parser/parser.c:13[m[K:
[01m[Ksrcs/parser/../../includes/SH_functs.h:73:17:[m[K [01;36m[Knote: [m[Kprevious declaration of ‘[01m[Kparser_rules[m[K’ with type ‘[01m[K_Bool(t_astn *, int *)[m[K’ {aka ‘[01m[K_Bool(struct AbstractSyntaxTreeNode *, int *)[m[K’}
   73 | bool            [01;36m[Kparser_rules[m[K(t_astn *node, int *error);
      |                 [01;36m[K^~~~~~~~~~~~[m[K
make: *** [Makefile:42: objs/parser/parser.o] Error 1
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
gcc -c -g3 -Wall -Wextra -Werror srcs/signals/ctrl_signal.c -o objs/signals/ctrl_signal.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/msgs.c -o objs/parser/msgs.o
gcc -c -g3 -Wall -Wextra -Werror srcs/fds.c -o objs/fds.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser_A.c -o objs/parser/parser_A.o
[01m[Ksrcs/parser/parser_A.c:[m[K In function ‘[01m[Kpipe_rules[m[K’:
[01m[Ksrcs/parser/parser_A.c:16:57:[m[K [01;31m[Kerror: [m[Kunused parameter ‘[01m[Kcl[m[K’ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Werror=unused-parameter]8;;[m[K]
   16 | bool    pipe_rules(t_astn *node, int *error, [01;31m[Kt_cleanup *cl[m[K)
      |                                              [01;31m[K~~~~~~~~~~~^~[m[K
[01m[Ksrcs/parser/parser_A.c:[m[K In function ‘[01m[Kapr_rules[m[K’:
[01m[Ksrcs/parser/parser_A.c:23:56:[m[K [01;31m[Kerror: [m[Kunused parameter ‘[01m[Kcl[m[K’ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Werror=unused-parameter]8;;[m[K]
   23 | bool    apr_rules(t_astn *node, int *error, [01;31m[Kt_cleanup *cl[m[K)
      |                                             [01;31m[K~~~~~~~~~~~^~[m[K
[01m[Ksrcs/parser/parser_A.c:[m[K In function ‘[01m[Kredr_rules[m[K’:
[01m[Ksrcs/parser/parser_A.c:30:57:[m[K [01;31m[Kerror: [m[Kunused parameter ‘[01m[Kcl[m[K’ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Werror=unused-parameter]8;;[m[K]
   30 | bool    redr_rules(t_astn *node, int *error, [01;31m[Kt_cleanup *cl[m[K)
      |                                              [01;31m[K~~~~~~~~~~~^~[m[K
[01m[Ksrcs/parser/parser_A.c:[m[K In function ‘[01m[Kredl_rules[m[K’:
[01m[Ksrcs/parser/parser_A.c:37:57:[m[K [01;31m[Kerror: [m[Kunused parameter ‘[01m[Kcl[m[K’ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Werror=unused-parameter]8;;[m[K]
   37 | bool    redl_rules(t_astn *node, int *error, [01;31m[Kt_cleanup *cl[m[K)
      |                                              [01;31m[K~~~~~~~~~~~^~[m[K
cc1: all warnings being treated as errors
make: *** [Makefile:42: objs/parser/parser_A.o] Error 1
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ make re
[?2004lrm -f objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o
rm -f minitest
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_A.c -o objs/lexer/lexerutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_B.c -o objs/lexer/lexerutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_C.c -o objs/lexer/lexerutils_C.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/utils.c -o objs/lexer/utils.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/create_ast.c -o objs/lexer/create_ast.o
gcc -c -g3 -Wall -Wextra -Werror srcs/lexer/lexerutils_D.c -o objs/lexer/lexerutils_D.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exe.c -o objs/executor/exe.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_A.c -o objs/executor/exeutils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/executor/exeutils_B.c -o objs/executor/exeutils_B.o
gcc -c -g3 -Wall -Wextra -Werror srcs/cr_env.c -o objs/cr_env.o
gcc -c -g3 -Wall -Wextra -Werror srcs/minishell.c -o objs/minishell.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser.c -o objs/parser/parser.o
gcc -c -g3 -Wall -Wextra -Werror srcs/signals/ctrl_signal.c -o objs/signals/ctrl_signal.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/msgs.c -o objs/parser/msgs.o
gcc -c -g3 -Wall -Wextra -Werror srcs/fds.c -o objs/fds.o
gcc -c -g3 -Wall -Wextra -Werror srcs/parser/parser_A.c -o objs/parser/parser_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_A.c -o objs/utils/utils_A.o
gcc -c -g3 -Wall -Wextra -Werror srcs/utils/utils_B.c -o objs/utils/utils_B.o
gcc -g3 -Wall -Wextra -Werror includes/SH_functs.h includes/SH_structs.h objs/lexer/lexerutils_A.o objs/lexer/lexerutils_B.o objs/lexer/lexerutils_C.o objs/lexer/utils.o objs/lexer/create_ast.o objs/lexer/lexerutils_D.o objs/executor/exe.o objs/executor/exeutils_A.o objs/executor/exeutils_B.o objs/cr_env.o objs/minishell.o objs/parser/parser.o objs/signals/ctrl_signal.o objs/parser/msgs.o objs/fds.o objs/parser/parser_A.o objs/utils/utils_A.o objs/utils/utils_B.o -L/usr/include -lreadline -o minitest
[?2004h]0;davidjwp@DESKTOP-PGAG9KC: ~/Minishell[01;32mdavidjwp@DESKTOP-PGAG9KC[00m:[01;34m~/Minishell[00m$ valgrind ./minitest
[?2004l==86773== Memcheck, a memory error detector
==86773== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==86773== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==86773== Command: ./minitest
==86773== 
[?2004h$> 
[?2004lexit:0
[?2004h$>                                                      
[?2004lexit:0
[?2004h$>                           
[?2004lexit:0
[?2004h$>                                              ^M
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> 
[?2004lexit:0
[?2004h$> :
[?2004lexit:0
[?2004h$> !
[?2004lexit:1
[?2004h$> >
[?2004lminishell: syntax error near unexpected token 'newline'
exit:2
[?2004h$> 
[?2004lexit:2
[?2004h$> 
[?2004lexit:2
[?2004h$> 
[?2004lexit:2
[?2004h$> 
[?2004lexit:2
[?2004h$> >>
[?2004lminishell: syntax error near unexpected token 'newline'
exit:2
[?2004h$> <<
[?2004l<<: command not found
==87975== 
==87975== HEAP SUMMARY:
==87975==     in use at exit: 208,165 bytes in 222 blocks
==87975==   total heap usage: 778 allocs, 5